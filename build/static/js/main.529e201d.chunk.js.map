{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","props","a","createElement","onClick","e","click","label","className","concat","operation","double","triple","c","initialState","displayValue","clearDisplay","values","current","Calculator","_this","Object","_Users_dutraneto_Documents_react_studies_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_dutraneto_Documents_react_studies_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_dutraneto_Documents_react_studies_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","_Users_dutraneto_Documents_react_studies_calculator_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","clearMemory","bind","_Users_dutraneto_Documents_react_studies_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","setOperation","addDigit","console","log","setState","equals","currentOperation","_Users_dutraneto_Documents_react_studies_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","eval","toFixed","includes","i","newValue","parseFloat","react__WEBPACK_IMPORTED_MODULE_8___default","_components_Display__WEBPACK_IMPORTED_MODULE_11__","value","_components_Button__WEBPACK_IMPORTED_MODULE_10__","Component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.529e201d.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nexport default props => {\n\n    return (\n\n        <button\n        onClick={e => props.click && props.click(props.label)}\n        // using template string for manipulationg html classes\n        className={\n                    `\n                    button\n                    ${props.operation ? 'operation' : ''}\n                    ${props.double    ? 'double'    : ''}\n                    ${props.triple    ? 'triple'    : ''}\n                    ${props.c         ? 'c'    : ''}\n\n                    `\n        }>   \n        {props.label}  \n        </button>\n    )\n}","import React, { Component } from 'react'\nimport './Calculator.css'\n\nimport Button from '../components/Button'\nimport Display from '../components/Display'\n\n// initialState to do operations\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    operation: null,\n    values: [0, 0],\n    current: 0\n}\n\nexport default class Calculator extends Component {\n\n    // clone\n    state = {...initialState}\n\n    constructor(props) {\n        super(props)\n\n        this.clearMemory  = this.clearMemory.bind(this)\n        this.setOperation = this.setOperation.bind(this)\n        this.addDigit     = this.addDigit.bind(this)\n\n    }\n    clearMemory() {\n        console.log('clean')\n        // from react\n        this.setState({ ...initialState })\n    }\n\n    setOperation(operation) {\n        console.log(operation)\n        if(this.state.current === 0) {\n            this.setState({ operation, current: 1, clearDisplay: true })\n        } else {\n            const equals = operation === '='\n            // get current operation\n            const currentOperation = this.state.operation\n            // clone the current values\n            const values = [...this.state.values]\n            try {\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`).toFixed(5)\n\n            } catch(e) {\n                values[0] = this.state.values[0]\n              }\n            values[1] = 0 // redefine index 1 to 0\n\n            this.setState({\n                displayValue: values[0],\n                operation: equals ? null : operation,\n                current: equals ? 0 : 1,\n                clearDisplay: !equals,\n                values\n            })\n        }\n    }\n    // to avoid more than one point on display\n    addDigit(n) {\n        if(n === '.' && this.state.displayValue.includes('.')) {\n            return\n        }\n\n        const clearDisplay = this.state.displayValue === '0'\n        || this.state.clearDisplay\n        const currentValue = clearDisplay ? '' : this.state.displayValue\n        const displayValue = currentValue + n\n        this.setState({ displayValue, clearDisplay: false })\n\n        if(n !== '.') {\n            const i = this.state.current\n            const newValue = parseFloat(displayValue)\n            const values = [...this.state.values]\n            values[i] = newValue\n            this.setState({ values })\n        }\n    }\n\n\n    render() {\n        // const addDigit = n => this.addDigit(n)\n        // const setOperation = op => this.setOperation(op)\n\n        return ( // expression\n\n            <div className=\"calculator\">\n                <Display value={this.state.displayValue}/>\n                <Button label=\"C\" click={this.clearMemory} triple c/>\n                <Button label=\"/\" click={this.setOperation} operation/>\n                <Button label=\"7\" click={this.addDigit}/>\n                <Button label=\"8\" click={this.addDigit}/>\n                <Button label=\"9\" click={this.addDigit}/>\n                <Button label=\"*\" click={this.setOperation} operation/>\n                <Button label=\"4\" click={this.addDigit}/>\n                <Button label=\"5\" click={this.addDigit}/>\n                <Button label=\"6\" click={this.addDigit}/>\n                <Button label=\"-\" click={this.setOperation} operation/>\n                <Button label=\"1\" click={this.addDigit}/>\n                <Button label=\"2\" click={this.addDigit}/>\n                <Button label=\"3\" click={this.addDigit}/>\n                <Button label=\"+\" click={this.setOperation} operation/>\n                <Button label=\"0\" click={this.addDigit} double/>\n                <Button label=\".\" click={this.addDigit}/>\n                <Button label=\"=\" click={this.setOperation} operation/>\n                \n            </div>\n\n        )\n    }\n\n}","import React from 'react'\nimport './Display.css';\n\nexport default props =>\n    <div className=\"display\">{props.value}</div>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render\n    (\n        <div>\n            <h1>React Calculator</h1>\n            <Calculator />\n        </div>\n        , document.getElementById('root')\n   )\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}